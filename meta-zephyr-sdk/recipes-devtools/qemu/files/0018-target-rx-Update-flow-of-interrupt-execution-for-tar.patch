From 7aebbd5ae1c11fd6a8c5d567f9cac1f315516a1e Mon Sep 17 00:00:00 2001
From: Duy Nguyen <duy.nguyen.xa@renesas.com>
Date: Tue, 17 Jun 2025 16:40:22 +0700
Subject: [PATCH 18/19] target/rx: Update flow of interrupt execution for
 target rx

do_interrupt function is call directly from CPU exception so we
need to add condition to check for CPU exception in case of
hardware interrupt is preempted to prevent unexpect behavior

Signed-off-by: Duy Nguyen <duy.nguyen.xa@renesas.com>
---
 target/rx/helper.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/target/rx/helper.c b/target/rx/helper.c
index e8aabf40ff..60958ad032 100644
--- a/target/rx/helper.c
+++ b/target/rx/helper.c
@@ -48,7 +48,6 @@ void rx_cpu_do_interrupt(CPUState *cs)
     uint32_t save_psw;
 
     env->in_sleep = 0;
-
     if (env->psw_u) {
         env->usp = env->regs[0];
     } else {
@@ -56,8 +55,9 @@ void rx_cpu_do_interrupt(CPUState *cs)
     }
     save_psw = rx_cpu_pack_psw(env);
     env->psw_pm = env->psw_i = env->psw_u = 0;
+    int32_t vec = cs->exception_index;
 
-    if (do_irq) {
+    if (do_irq && vec < 0) {
         if (do_irq & CPU_INTERRUPT_FIR) {
             env->bpc = env->pc;
             env->bpsw = save_psw;
@@ -79,7 +79,6 @@ void rx_cpu_do_interrupt(CPUState *cs)
                           "interrupt 0x%02x raised\n", env->ack_irq);
         }
     } else {
-        uint32_t vec = cs->exception_index;
         const char *expname = "unknown exception";
 
         env->isp -= 4;
-- 
2.43.0

